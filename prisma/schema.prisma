// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  title        String
  author       String
  description  String
  isbn         String
  pages        Int
  image        String
  epub         String
  likedPercent Int
  likedBy      User[]    @relation("LikedBooks")
  readBy       User[]    @relation("ReadBooks")
  readingBy    User[]    @relation("ReadingBooks")
  buyBy        User[]    @relation("BuyBooks")
  history      History[]
  genre        Genre[]
  reviews      Review[]
}

model Genre {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  color     String   @default("#000000")
  books     Book[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  text      String
  emotion   String[]
}

model History {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  book      Book     @relation(fields: [bookId], references: [id])
  time      Int
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  bookId    Int
}

model User {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  email        String    @unique
  name         String?
  picture      String?
  password     String
  isAdmin      Boolean   @default(false)
  likedBooks   Book[]    @relation("LikedBooks")
  buyBooks     Book[]    @relation("BuyBooks")
  readBooks    Book[]    @relation("ReadBooks")
  readingBooks Book[]    @relation("ReadingBooks")
  history      History[]
  review       Review[]
}
